---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: pttg-rps-enquiry
  labels:
    version: {{.VERSION}}
spec:
  replicas: 4
  selector:
    matchLabels:
      name: pttg-rps-enquiry
  strategy:
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 2
    type: RollingUpdate
  template:
    metadata:
      labels:
        name: pttg-rps-enquiry
        version: {{.VERSION}}
    spec:
      containers:
      - name: certs
        image: quay.io/ukhomeofficedigital/cfssl-sidekick:v0.0.6
        securityContext:
          runAsNonRoot: true
          capabilities:
            drop:
             - SETUID
             - SETGID
        args:
          - --certs=/certs
          - --domain=pttg-rps-enquiry.${KUBE_NAMESPACE}.svc.cluster.local
          - --expiry=8760h
          - --command=/usr/local/scripts/trigger_nginx_reload.sh
        env:
          - name: KUBE_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
        volumeMounts:
          - name: certs
            mountPath: /certs
          - name: bundle
            mountPath: /etc/ssl/certs
            readOnly: true
      - name: proxy
        image: quay.io/ukhomeofficedigital/pttg-rps-enquiry-proxy:build-9
        imagePullPolicy: IfNotPresent
        securityContext:
          runAsNonRoot: true
          capabilities:
            drop:
             - SETUID
             - SETGID
        resources:
          limits:
            memory: "100Mi"
            cpu: 100m
          requests:
            memory: "50Mi"
            cpu: 100m
        env:
          - name: PROXY_SERVICE_HOST
            value: '127.0.0.1'
          - name: PROXY_SERVICE_PORT
            value: '8080'
          - name: NAXSI_USE_DEFAULT_RULES
            value: 'FALSE'
          - name: ENABLE_UUID_PARAM
            value: 'FALSE'
          - name: HTTPS_REDIRECT
            value: 'FALSE'
          - name: SERVER_CERT
            value: /certs/tls.pem
          - name: SERVER_KEY
            value: /certs/tls-key.pem
          - name: ADD_NGINX_SERVER_CFG
            value: 'gzip off; location = /reload { allow 127.0.0.1; deny all; content_by_lua_block { os.execute("touch /tmp/nginx-reload-triggered; /usr/local/openresty/nginx/sbin/nginx -s reload; touch /tmp/nginx-reload-complete;") } }'
        volumeMounts:
          - name: certs
            mountPath: /certs
            readOnly: true
        ports:
          - name: https
            containerPort: 10443
      - name: pttg-rps-enquiry
        image: quay.io/ukhomeofficedigital/pttg-rps-enquiry:{{.VERSION}}
        imagePullPolicy: Always
        securityContext:
          runAsNonRoot: true
          capabilities:
            drop:
             - SETUID
             - SETGID
        env:
          - name: NOTIFY_BEARER_TOKEN
            valueFrom:
              secretKeyRef:
                name: notify-credentials
                key: notify-bearer
          - name: SLACK_WEBHOOK_URL
            valueFrom:
              configMapKeyRef:
                name: slack-config
                key: slack-webhook-url
          - name: SLACK_CHANNEL_NAME
            valueFrom:
              configMapKeyRef:
                name: slack-config
                key: slack-channel-name
          - name: REDIS_HOST
            value: redis
          - name: REDIS_PASSWORD
            valueFrom:
              secretKeyRef:
                name: redis
                key: pass
          - name: CA_CERTS_PATH
            value: "/certs/tls.pem"
          - name: PROXY_REDIRECTION_URL
            value: https://{{.DOMAIN_NAME}}
          - name: NOTIFY_API_KEY
            valueFrom:
              secretKeyRef:
                name: notify-credentials
                key: api-key
          - name: NOTIFY_RECIPIENT
            value: {{.NOTIFY_RECIPIENT}}
          - name: NODE_ENV
            value: production
          - name: SESSION_SECRET
            valueFrom:
              secretKeyRef:
                name: hof-session-secret
                key: hof-session-secret
        resources:
          limits:
            cpu: 1000m
            memory: 400Mi
          requests:
            cpu: 200m
            memory: 100Mi
        ports:
          - name: http
            containerPort: 8080
        volumeMounts:
          - mountPath: /certs
            name: certs
            readOnly: true
        livenessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders:
            - name: X-probe
              value: kubelet
            path: /healthz/ping
            port: http
            scheme: HTTP
          initialDelaySeconds: 20
          periodSeconds: 60
          successThreshold: 1
          timeoutSeconds: 10
      volumes:
        - name: data
          emptyDir: {}
        - name: certs
          emptyDir:
            medium: "Memory"
        - name: bundle
          configMap:
            name: bundle
